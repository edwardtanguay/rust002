use anyhow::Result;
use std::fs::File;
use std::io::Write;
use rand::Rng;

fn main() -> Result<()> {

    // EX001: random number
    let mut rng = rand::thread_rng();
    let random_number = rand::thread_rng().gen_range(1..=100);
    let random_number_range: Vec<u32> = (0..10).map(|_| rng.gen_range(1..=100)).collect();

    // EX002: shadowing
    let x = 5;
    // x = x + 1; // gets error since you can't change the value of an immutable variable
    let x = x + 1; // but this works because you now have two variables, one shadows the other (!)

    let html_content = format!(r#"
    <!DOCTYPE html>
    <html>
    <head>
        <title>Rust Site</title>
        <style>
            body {{
                background-color: #bbb;
                font-family: sans-serif;
                padding-left: 1rem;
            }}
            a {{
                color: #6E260E;
            }}
        </style>
    </head>
    <body>
        <h1>Rust-Generated Site</h1>
        <p>This site was generated by <a target="_blank" href="https://github.com/edwardtanguay/rust002/blob/main/src/main.rs">this Rust code</a>.</p>
        <p>See also <a target="_blank" href="https://tanguay-eu.vercel.app/forays/283">my notes</a> on this project.
        <hr/>
        <p>Currently learning Rust <a target="_blank" href="https://doc.rust-lang.org/stable/book/ch03-01-variables-and-mutability.html">variables and mutability</a>.
        <hr/>
        <h2>EX001: Create random number</h2>
        <p>Random number: <b>{}</b></p>
        <p>Random number range: <b>{:?}</b></p>
        <p>(Note: the number is random everytime the site is generated, not every page load.)</p>
        <h2>EX002: Shadowing</h2>
        <p>x = {}</p>
    </body>
    </html>
    "#, random_number, random_number_range, x);

    let html_path_and_file_name = "/var/www/rust/index.html";
    let mut file = File::create(html_path_and_file_name)?;
    file.write_all(html_content.as_bytes())?;
    println!("Site generated: {}", html_path_and_file_name);

    Ok(())

}
